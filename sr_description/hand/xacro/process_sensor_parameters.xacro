<?xml version="1.0"?>
<!--
 Software License Agreement (BSD License)
 Copyright Â© 2022-2023 belongs to Shadow Robot Company Ltd.
 All rights reserved.
 Redistribution and use in source and binary forms, with or without modification,
 are permitted provided that the following conditions are met:
   1. Redistributions of source code must retain the above copyright notice,
      this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright notice,
      this list of conditions and the following disclaimer in the documentation
      and/or other materials provided with the distribution.
   3. Neither the name of Shadow Robot Company Ltd nor the names of its contributors
      may be used to endorse or promote products derived from this software without
      specific prior written permission.
 This software is provided by Shadow Robot Company Ltd "as is" and any express
 or implied warranties, including, but not limited to, the implied warranties of
 merchantability and fitness for a particular purpose are disclaimed. In no event
 shall the copyright holder be liable for any direct, indirect, incidental, special,
 exemplary, or consequential damages (including, but not limited to, procurement of
 substitute goods or services; loss of use, data, or profits; or business interruption)
 however caused and on any theory of liability, whether in contract, strict liability,
 or tort (including negligence or otherwise) arising in any way out of the use of this
 software, even if advised of the possibility of such damage.
-->

<process_sensor_parameters xmlns:xacro="http://www.ros.org/wiki/xacro">
	<xacro:include filename="$(find sr_description)/hand/xacro/validate_macros.xacro" />
	<!-- Set defaults -->
	<xacro:property name="default_tactile_sensor" default="none" />
	<xacro:property name="tip_sensors" default="${pst}" />
	<xacro:property name="mid_sensors" default="${default_tactile_sensor}" />
	<xacro:property name="prox_sensors" default="${default_tactile_sensor}" />
	<xacro:property name="palm_sensor" default="${default_tactile_sensor}" />
	<!-- Translate deprecated sensor parameters -->
	<xacro:macro name="translate_from_deprecated" params="name value tip:=${None} mid:=none prox:=none palm:=none">
		<xacro:if value="${value}">
			<xacro:if value="${tip is None}">
				<!-- tip defaults to name -->
				<xacro:property name="tip" value="${name}" />
			</xacro:if>
			<xacro:property name="tip_sensors" value="${tip}" scope="parent" />
			<xacro:property name="mid_sensors" value="${mid}" scope="parent" />
			<xacro:property name="prox_sensors" value="${prox}" scope="parent" />
			<xacro:property name="palm_sensor" value="${palm}" scope="parent" />
			${xacro.warning('Parameter "' + name + '" is deprecated. Please use tip_sensors=' + name + ' instead!')}
		</xacro:if>
		<xacro:property name="${name}" remove="true" />
	</xacro:macro>
	<!-- Old BioTac, replacing middle and distal phalange -->
	<xacro:property name="bio" default="${None}" />
	<xacro:translate_from_deprecated name="bio" value="${bio}" mid="bio" />
	<!-- New BioTac keeping middle -->
	<xacro:property name="bt_sp" default="${None}" />
	<xacro:translate_from_deprecated name="bt_sp" value="${bt_sp}" />
	<!-- Ellipsoid sensor -->
	<xacro:property name="eli" default="${None}" />
	<xacro:translate_from_deprecated name="eli" value="${eli}" />
	<!-- Transform sensor parameter into proper type -->
	<xacro:macro name="transform_to_type" params="name value default_tactile_sensor:=^|none
				valid_finger_tokens:=^|${'th ff mf rf lf'.split()}
				valid_sensor_tokens:=^|${'bt_2p bt_sp pst mst none'.split()}">
		<!-- None acts as marker indicating that we didn't find the correct type specifier yet -->
		<!-- Finally, _tmp_ should become a list of (finger, sensor) pairs -->
		<xacro:property name="_tmp_" value="${None}" />
		<!-- Formatter for preferred dict-like string -->
		<xacro:property name="_fmt_pair_" value="{f}={sensor}" />
		<!-- Handle list input of single items -->
		<xacro:if value="${_tmp_ is None and python.isinstance(value, list)}">
			<!-- Transform into list of (finger,sensor) pairs -->
			<xacro:property name="_tmp_" value="${list(python.zip(valid_finger_tokens, value))}" lazy_eval="false" />
			${xacro.warning('Deprecated specifier (list) used for ' + name + '. Replace with: ' + name + '="' + ' '.join([_fmt_pair_.format(f=k, sensor=v) for k,v in _tmp_]) + '"')}
		</xacro:if>
		<!-- Handle dict input -->
		<xacro:if value="${_tmp_ is None and python.isinstance(value, dict)}">
			<!-- Transform dict into list -->
			<xacro:property name="_tmp_" value="${list(value.items())}" lazy_eval="false" />
			${xacro.warning('Deprecated specifier (dict) used for ' + name + '. Replace with: ' + name + '="' + ' '.join([_fmt_pair_.format(f=k, sensor=v) for k,v in _tmp_]) + '"')}
		</xacro:if>
		<!-- Handle dict-like string: 'th=bio, ff=bio, mf=none, rf=none, lf=none' -->
		<xacro:if value="${_tmp_ is None and '=' in value}">
			<!-- Transform into list of finger=sensor pairs -->
			<xacro:property name="_tmp_" value="${[xacro.tokenize(spec, sep='=') for spec in xacro.tokenize(value)]}" lazy_eval="false" />
		</xacro:if>
		<!-- Handle list-like string: 'bio bio pst pst pst' assuming order of valid_finger_tokens -->
		<xacro:if value="${_tmp_ is None and python.any([sep in value for sep in ',; '])}">
			<xacro:property name="_tmp_" value="${python.zip(valid_finger_tokens, value.split())}" lazy_eval="false" />
		</xacro:if>
		<!-- Handle plain string to be used for all fingers -->
		<xacro:if value="${_tmp_ is None}">
			<xacro:property name="_tmp_" value="${python.zip(valid_finger_tokens, len(valid_finger_tokens) * [value])}" lazy_eval="false" />
		</xacro:if>
		<!-- Fill unset values in _tmp_ with the default. Turns _tmp_ into a dict! -->
		<xacro:property name="_defaults_" value="${python.zip(valid_finger_tokens, len(valid_finger_tokens) * [default_tactile_sensor])}" lazy_eval="false" />
		<xacro:property name="_tmp_" value="${dict(list(_defaults_) + list(_tmp_))}" lazy_eval="false" />
		<!-- Normalize to lower case -->
		<xacro:property name="_tmp_" value="${dict([(k.lower(), v.lower()) for k, v in _tmp_.items()])}" lazy_eval="false" />
		<!-- Validate finger tokens -->
		<xacro:validate_tokens tokens="${_tmp_.keys()}" valid="${valid_finger_tokens}" name="finger specifier" />
		<!-- Validate sensor tokens -->
		<xacro:validate_tokens tokens="${_tmp_.values()}" valid="${valid_sensor_tokens}" name="tactile sensor specifier" />
		<!-- Finally transform into desired type (a dotified dict) -->
		<xacro:property name="${name}" value="${xacro.dotify(dict([(k.lower(), v.lower()) for k, v in _tmp_.items()]))}" scope="parent" />
	</xacro:macro>
	<xacro:transform_to_type name="tip_sensors" value="${tip_sensors}" />
	<xacro:transform_to_type name="mid_sensors" value="${mid_sensors}" />
	<xacro:transform_to_type name="prox_sensors" value="${prox_sensors}" />
</process_sensor_parameters>
